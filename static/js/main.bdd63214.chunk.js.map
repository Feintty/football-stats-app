{"version":3,"sources":["Header.js","config.js","NavBar.js","LeagueCard.js","ListFilter.js","ListLeagues.js","LeagueHeading.js","CalendarFilter.js","MatchesList.js","LeagueTable.js","CalendarLeague.js","TeamCard.js","ListTeams.js","TeamSquadList.js","CalendarTeam.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","cust","background","Header","classes","AppBar","position","className","Toolbar","Button","component","Link","to","Typography","url","competitions","apiKey","matchesByLeagueId","id","teams","teamById","matchesByTeamId","ghPagesURL","availableLeagues","root","margin","spacing","display","flexDirection","alignItems","justifyContent","NavBar","activeElement","Paper","elevation","ButtonGroup","variant","size","orientation","color","aria-label","disabled","config","marginBottom","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","large","width","LeagueCard","leagueName","leagueImg","country","startDate","endDate","isDisabled","useState","expanded","setExpanded","Card","CardHeader","avatar","Avatar","src","action","Grid","container","justify","item","extendedIcon","IconButton","onClick","aria-expanded","titleTypographyProps","title","subheader","match","CardActions","disableSpacing","Collapse","in","timeout","unmountOnExit","CardContent","paragraph","padding","ListFilter","textValue","yearValue","history","useHistory","currentText","setCurrentText","currentYear","setCurrentYear","onclickButton","push","location","search","direction","onKeyPress","e","key","noValidate","autoComplete","TextField","value","onChange","target","label","type","ListLeagues","isDataLoaded","setIsDataLoaded","footballData","setFootballData","useLocation","text","queryString","parse","year","paper","marginTop","loaderContainer","top","left","loader","useEffect","fetch","method","headers","then","res","json","result","error","console","log","Container","align","LinearProgress","xs","sm","data","cardsArray","forEach","competition","hasOwnProperty","currentSeason","name","emblemUrl","area","includes","createCardsArray","filteredData","slice","filter","start","Number","end","el","toLowerCase","filterData","LeagueHeading","gutterBottom","CalendarFilter","startDateValue","endDateValue","Date","setStartDate","setEndDate","parseUtcDate","utcDate","parsedDate","getFullYear","getMonth","getDate","utils","DateFnsUtils","disableToolbar","format","date","KeyboardButtonProps","queryStr","table","minWidth","colorWinner","colorLoser","MatchesList","matches","parseUtcTime","getHours","toString","length","getMinutes","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","scope","status","score","winner","homeTeam","awayTeam","fullTime","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","flexGrow","backgroundColor","palette","LeagueTable","setValue","createTable","tabs","tabPanels","Array","from","Set","tab","Tab","a11yProps","Tabs","event","newValue","indicatorColor","textColor","scrollButtons","CalendarLeague","useParams","matchesData","setMatchesData","isMatchesDataLoaded","setIsMatchesDataLoaded","filteredMatches","normalizedStartDate","normalizedEndDate","normalizedYear","filterMatches","card","boxShadow","fit","objectFit","content","textAlign","divider","heading","fontWeight","border","TeamCard","teamImage","adress","phone","website","email","lastUpdate","CardMedia","image","Divider","light","ListTeams","teamsData","setTeamsData","team","crestUrl","address","lastUpdated","TeamSquadList","squad","setSquad","player","dateOfBirth","countryOfBirth","nationality","shirtNumber","CalendarTeam","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdd63214.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SportsSoccerIcon from \"@material-ui/icons/SportsSoccer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cust: {\r\n    background: \"#d2e3d1\",\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"static\" className={classes.cust}>\r\n      <Toolbar>\r\n          <Button component={Link} to=\"/leagues\">\r\n            <Typography> FootballApp</Typography>\r\n            <SportsSoccerIcon />\r\n          </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const url = 'https://api.football-data.org/'\nexport default {\n    competitions: `${url}v2/competitions`,\n    apiKey:\"b6b49b0c1b124e71b892c2ca57b02f7c\",\n    matchesByLeagueId: (id) =>`${url}v2/competitions/${id}/matches`,\n    teams: `${url}v2/teams`,\n    teamById: (id)=> `${url}v2/teams/${id}`,\n    matchesByTeamId: (id)=> `${url}v2/teams/${id}/matches`,\n    ghPagesURL: '/football-stats-app/',\n    availableLeagues:[2000,2001,2002,2003,2013,2014,2015,2016,2017,2018,2019,2021]\n}","import React from \"react\";\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\nimport { ButtonGroup, Button, Typography, Container ,Paper} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport config from \"./config\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin:theme.spacing(2),\n    display:'flex',\n    flexDirection:'column',\n    alignItems:'center',\n    justifyContent:'center'\n  }\n}));\n\nfunction NavBar({ activeElement }) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root} elevation={2} >\n      <ButtonGroup\n        variant=\"text\"\n        size=\"large\"\n        orientation=\"vertical\"\n        color=\"primary\"\n        aria-label=\"large outlined primary button group\"\n      >\n        {activeElement === \"Список лиг\" ? (\n          <Button color=\"disabled\" disabled>\n            Список лиг\n          </Button>\n        ) : (\n          <Button component={Link} to={`${config.ghPagesURL}leagues`}>\n            Список лиг\n          </Button>\n        )}\n        {activeElement === \"Список команд\" ? (\n          <Button color=\"disabled\" disabled>\n            Список команд\n          </Button>\n        ) : (\n          <Button component={Link} to={`${config.ghPagesURL}teams`}>\n            Список команд\n          </Button>\n        )}\n      </ButtonGroup>\n    </Paper>\n  );\n}\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport EmojiEvents from \"@material-ui/icons/EmojiEvents\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Collapse,\n  Avatar,\n  IconButton,\n  Typography,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport config from \"./config\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(1),\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\nfunction LeagueCard({\n  leagueName,\n  leagueImg,\n  country,\n  startDate,\n  endDate,\n  id,\n  isDisabled,\n}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar\n            className={classes.large}\n            variant=\"rounded\"\n            src={\n              leagueImg\n                ? leagueImg\n                : \"https://upload.wikimedia.org/wikipedia/commons/4/41/Noimage.svg\"\n            }\n          ></Avatar>\n        }\n        action={\n          <Grid container \n          justify=\"center\"\n          alignItems=\"center\"\n        >\n            {isDisabled ? (\n              <Grid item>\n                <Button disabled>\n                  <EmojiEvents className={classes.extendedIcon} />\n                  Матчи\n                </Button>\n              </Grid>\n            ) : (\n              <Grid item>\n                <Button component={Link} to={`${config.ghPagesURL}leaguecalendar/${id}`}>\n                  <EmojiEvents className={classes.extendedIcon} />\n                  Матчи\n                </Button>\n              </Grid>\n            )}\n            <Grid item>\n              <IconButton\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        }\n        titleTypographyProps={{ variant: \"h6\" }}\n        title={leagueName}\n        subheader={`${country}, ${startDate.match(/^.{4}/)[0]}-${\n          endDate.match(/^.{4}/)[0]\n        }`}\n      />\n      <CardActions disableSpacing></CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Страна: {country}</Typography>\n          <Typography paragraph>Дата начала: {startDate}</Typography>\n          <Typography paragraph>Дата окончания: {endDate}</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport default LeagueCard;\n","import React, { useState } from \"react\";\nimport { Paper, TextField, IconButton, Grid } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  margin: {\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default function ListFilter({ textValue, yearValue }) {\n  const history = useHistory();\n  const classes = useStyles();\n  const [currentText, setCurrentText] = useState(textValue ? textValue : \"\");\n  const [currentYear, setCurrentYear] = useState(yearValue ? yearValue : \"\");\n\n  const onclickButton = () => {\n    if (currentText !== \"\" || currentYear !== \"\") {\n      history.push({\n        location: \"/\",\n        search: `?year=${currentYear}&text=${currentText}`,\n      });\n    } else {\n      history.push({\n        location: \"/\",\n      });\n    }\n  };\n\n  return (\n    <Paper className={classes.root} elevation={2}>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <div\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              onclickButton();\n            }\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            className={classes.margin}\n            id=\"standard-basic\"\n            value={currentText}\n            onChange={(e) => setCurrentText(e.target.value)}\n            label=\"Название\"\n          />\n        </div>\n        <div\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              onclickButton();\n            }\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            className={classes.margin}\n            id=\"standard-number\"\n            value={currentYear}\n            onChange={(e) => setCurrentYear(e.target.value)}\n            type=\"number\"\n            label=\"Год\"\n          />\n        </div>\n        <IconButton className={classes.margin} onClick={onclickButton}>\n          <SearchIcon />\n        </IconButton>\n      </Grid>\n    </Paper>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport config from \"./config\";\nimport { LinearProgress, Container, Paper, Grid } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\nimport LeagueCard from \"./LeagueCard\";\nimport ListFilter from \"./ListFilter\";\nimport queryString from \"query-string\";\nimport {  useLocation } from \"react-router-dom\";\n\nexport default function ListLeagues() {\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [footballData, setFootballData] = useState();\n  const { search } = useLocation();\n  const { text } = queryString.parse(search);\n  const { year } = queryString.parse(search);\n\n  const useStyles = makeStyles((theme) => ({\n    paper:{\n      marginTop:theme.spacing(2),\n      marginBottom:theme.spacing(2),\n      padding:theme.spacing(2)\n    },\n    loaderContainer:{\n      position:'absolute',\n      top:'0',\n      left:'0',\n      padding:0,\n    },\n    loader:{\n      width: '100vw'\n    }\n  }));\n  const classes = useStyles();\n\n  const fetchFootballData = () => {\n    fetch(`${config.competitions}`, {\n      method: \"GET\",\n      headers: { \"X-Auth-Token\": config.apiKey },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setFootballData(result.competitions);\n          setIsDataLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  const filterData = (data) => {\n    let filteredData = data.slice();\n\n    if (!!year) {\n      filteredData = filteredData.filter((competition) => {\n        if (\n          competition.hasOwnProperty(\"currentSeason\") &&\n          competition.currentSeason !== null\n        ) {\n          const start = Number(\n            competition.currentSeason.startDate.match(/^.{4}/)[0]\n          );\n          const end = Number(\n            competition.currentSeason.endDate.match(/^.{4}/)[0]\n          );\n          return Number(year) >= start && Number(year) <= end;\n        }\n      });\n    }\n    if (!!text) {\n      filteredData = filteredData.filter((el) => el.name.toLowerCase().includes(text.toLowerCase()));\n    }\n    return filteredData;\n  };\n\n  const createCardsArray = (data) => {\n    const cardsArray = [];\n    data.forEach((competition) => {\n      if (\n        competition.hasOwnProperty(\"currentSeason\") &&\n        competition.currentSeason !== null\n      ) {\n        cardsArray.push(\n          <LeagueCard\n          key={competition.id}\n            leagueName={competition.name}\n            leagueImg={competition.emblemUrl}\n            country={competition.area.name}\n            startDate={\n              competition.currentSeason.startDate\n                ? competition.currentSeason.startDate\n                : \"\"\n            }\n            endDate={\n              competition.currentSeason.endDate\n                ? competition.currentSeason.endDate\n                : \"\"\n            }\n            id={competition.id}\n            isDisabled={!config.availableLeagues.includes(competition.id)}\n          />\n        );\n      } else {\n        cardsArray.push(\n          <LeagueCard\n            key={competition.id}\n            leagueName={competition.name}\n            leagueImg={competition.emblemUrl}\n            country={competition.area.name}\n            startDate={\"none\"}\n            endDate={\"none\"}\n            id={competition.id}\n            isDisabled={!config.availableLeagues.includes(competition.id)}\n          />\n        );\n      }\n    });\n    return cardsArray;\n  };\n\n  useEffect(() => {\n    fetchFootballData();\n  }, []);\n\n  const loader = ( <Container className={classes.loaderContainer} align=\"center\">\n  <LinearProgress className={classes.loader}/>\n</Container>)\n\n    return (\n      <Grid container >\n        <Grid item xs>\n        <NavBar activeElement=\"Список лиг\" />\n        <ListFilter textValue={text} yearValue={year} />\n        </Grid>\n        <Grid item xs sm={10}>\n          <Paper className={classes.paper}>\n          {(isDataLoaded)?createCardsArray(filterData(footballData)):loader}\n          </Paper>    \n        </Grid>\n      </Grid>\n      \n    );\n}\n\n;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Typography,\n  Paper,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n root:{\n   padding:theme.spacing(2),\n   marginTop:theme.spacing(1)\n }\n}));\n\nexport default function LeagueHeading({\n  leagueName,\n  country,\n}) {\n  const classes = useStyles();\n\n\n  return (\n    <Paper className={classes.root}>\n        <Typography variant=\"h4\" gutterBottom>{leagueName}</Typography>\n        <Typography variant=\"h5\" gutterBottom color=\"textSecondary\">Страна: {country}</Typography>\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Paper, TextField, IconButton, Grid } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  padding: {\n    padding: theme.spacing(2),\n  },\n  margin: {\n    margin: theme.spacing(2),\n  },\n}));\n\n export default function CalendarFilter({ startDateValue, endDateValue, yearValue }) {\n  const history = useHistory();\n  const classes = useStyles();\n  const [currentYear, setCurrentYear] = useState(yearValue ? yearValue : \"\");\n  const [startDate, setStartDate] = useState(\n    startDateValue ? new Date(Date.parse(startDateValue)) : null\n  );\n  const [endDate, setEndDate] = useState(\n    endDateValue ? new Date(Date.parse(endDateValue)) : null\n  );\n\n  const onclickButton = () => {\n    const queryStr = `${startDate ? \"start=\" + parseUtcDate(startDate) : \"\"}${\n      endDate ? \"&end=\" + parseUtcDate(endDate) : \"\"\n    }${currentYear ? \"&year=\" + currentYear : \"\"}`;\n    history.push({\n      location: \"/\",\n      search: queryStr,\n    });\n  };\n\n  const parseUtcDate = (utcDate) => {\n    const parsedDate = new Date(Date.parse(utcDate));\n    return `${parsedDate.getFullYear()}-${\n      parsedDate.getMonth() + 1\n    }-${parsedDate.getDate()}`;\n  };\n\n  const onStartDateChange = (date) => {\n    setStartDate(date);\n  };\n\n  const onEndDateChange = (date) => {\n    setEndDate(date);\n  };\n\n  //<form> перехватывает через обработчик нажатие на энтер\n  return (\n    <Paper className={classes.root} elevation={2}>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            label=\"Начало\"\n            value={startDate}\n            onChange={onStartDateChange}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            label=\"Конец\"\n            value={endDate}\n            onChange={onEndDateChange}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n        </MuiPickersUtilsProvider>\n        {/* <IconButton className={classes.margin} onClick = {onclickButton}> */}\n        <div className={classes.padding} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"standard-number\"\n            value={currentYear}\n            onChange={(e) => setCurrentYear(e.target.value)}\n            type=\"number\"\n            label=\"Год\"\n          />\n        </div>\n        <IconButton onClick={onclickButton} className={classes.margin}>\n          <SearchIcon />\n        </IconButton>\n      </Grid>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  colorWinner: {\n    color: \"green\",\n  },\n  colorLoser: {\n    color: \"red\",\n  },\n});\n\nexport default function MatchesList({ matches }) {\n  const classes = useStyles();\n\n  const parseUtcDate = (utcDate) => {\n    const parsedDate = new Date(Date.parse(utcDate));\n    return `${parsedDate.getFullYear()}-${parsedDate.getMonth()}-${parsedDate.getDate()}`;\n  };\n\n  const parseUtcTime = (utcDate) => {\n    const parsedDate = new Date(Date.parse(utcDate));\n    return `${\n      parsedDate.getHours().toString().length === 1\n        ? \"0\" + parsedDate.getHours()\n        : parsedDate.getHours()\n    }:${\n      parsedDate.getMinutes().toString().length === 1\n        ? \"0\" + parsedDate.getMinutes()\n        : parsedDate.getMinutes()\n    }`;\n  };\n\n  const generateCells = () => {\n    return matches.map((match) => (\n      <TableRow key={match.id}>\n        <TableCell component=\"th\" scope=\"row\">\n          {match.status}\n        </TableCell>\n        <TableCell align=\"right\">{parseUtcDate(match.utcDate)}</TableCell>\n        <TableCell align=\"right\">{parseUtcTime(match.utcDate)}</TableCell>\n        <TableCell\n          className={\n            match.score.winner === \"HOME_TEAM\"\n              ? classes.colorWinner\n              : classes.colorLoser\n          }\n          align=\"right\"\n        >\n          {match.homeTeam.name}\n        </TableCell>\n        <TableCell\n          className={\n            match.score.winner === \"AWAY_TEAM\"\n              ? classes.colorWinner\n              : classes.colorLoser\n          }\n          align=\"right\"\n        >\n          {match.awayTeam.name}\n        </TableCell>\n        <TableCell align=\"right\">\n          {match.score.fullTime.homeTeam !== null\n            ? `${match.score.fullTime.homeTeam}:${match.score.fullTime.awayTeam}`\n            : \"\"}\n        </TableCell>\n      </TableRow>\n    ));\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Статус</TableCell>\n            <TableCell align=\"right\">Дата</TableCell>\n            <TableCell align=\"right\">Время</TableCell>\n            <TableCell align=\"right\">Команда 1&nbsp;(дома)</TableCell>\n            <TableCell align=\"right\">Команда 2&nbsp;(гость)</TableCell>\n            <TableCell align=\"right\">Счет&nbsp;(дома:гость)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{generateCells()}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Tabs, Tab, Typography, Box } from \"@material-ui/core\";\nimport MatchesList from \"./MatchesList\";\n\nfunction TabPanel({ children, value, index, ...other }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function LeagueTable({ matches }) {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const parseUtcDate = (utcDate) => {\n    const parsedDate = new Date(Date.parse(utcDate));\n    return `${parsedDate.getFullYear()}-${parsedDate.getMonth()}-${parsedDate.getDate()}`;\n  };\n\n  const createTable = () => {\n    const table = {\n      tabs: [],\n      tabPanels: [],\n    };\n    matches.forEach((match) => {\n      table.tabs.push(parseUtcDate(match.utcDate));\n    });\n    table.tabs = Array.from(new Set(table.tabs));\n    table.tabs.forEach((tab, index) => {\n      table.tabPanels.push(\n        <TabPanel value={value} index={index}>\n          <MatchesList\n            matches={matches.filter(\n              (match) => parseUtcDate(match.utcDate) === tab\n            )}\n          />\n        </TabPanel>\n      );\n    });\n    table.tabs = table.tabs.map((match, index) => (\n      <Tab label={match} {...a11yProps(index)} />\n    ));\n    return table;\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          {createTable().tabs}\n        </Tabs>\n      </AppBar>\n      {createTable().tabPanels}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LeagueHeading from \"./LeagueHeading\";\nimport config from \"./config\";\nimport queryString from \"query-string\";\nimport { Paper, Grid, Container, LinearProgress } from \"@material-ui/core\";\nimport CalendarFilter from \"./CalendarFilter\";\nimport LeagueTable from \"./LeagueTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  loaderContainer:{\n    position:'absolute',\n    top:'0',\n    left:'0',\n    padding:0,\n  },\n  loader:{\n    width: '100vw'\n  }\n}));\n\nexport default function CalendarLeague() {\n  const { id } = useParams();\n  const [matchesData, setMatchesData] = useState();\n  const [isMatchesDataLoaded, setIsMatchesDataLoaded] = useState(false);\n  const { search } = useLocation();\n  const { start } = queryString.parse(search);\n  const { end } = queryString.parse(search);\n  const { year } = queryString.parse(search);\n\n  const fetchMatchesData = () => {\n    fetch(`${config.matchesByLeagueId(id)}`, {\n      method: \"GET\",\n      headers: { \"X-Auth-Token\": config.apiKey },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setMatchesData(result);\n          setIsMatchesDataLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  useEffect(() => {\n    fetchMatchesData();\n  }, []);\n\n  const parseUtcDate = (utcDate) => {\n    const parsedDate = new Date(Date.parse(utcDate));\n    return `${parsedDate.getFullYear()}-${parsedDate.getMonth()}-${parsedDate.getDate()}`;\n  };\n\n  const filterMatches = () => {\n    let filteredMatches = matchesData.matches.slice();\n    if (start) {\n      const normalizedStartDate = new Date(Date.parse(start));\n      filteredMatches = filteredMatches.filter((match) => {\n        const normalizedMatchDate = new Date(\n          Date.parse(parseUtcDate(match.utcDate))\n        );\n        return normalizedMatchDate >= normalizedStartDate;\n      });\n    }\n    if (end) {\n      const normalizedEndDate = new Date(Date.parse(end));\n      filteredMatches = filteredMatches.filter((match) => {\n        const normalizedMatchDate = new Date(\n          Date.parse(parseUtcDate(match.utcDate))\n        );\n        return normalizedMatchDate <= normalizedEndDate;\n      });\n    }\n    if (year) {\n      const normalizedYear = new Date(Date.parse(year));\n      filteredMatches = filteredMatches.filter((match) => {\n        const normalizedMatchDate = new Date(\n          Date.parse(parseUtcDate(match.utcDate))\n        );\n        return (\n          normalizedMatchDate.getFullYear() === normalizedYear.getFullYear()\n        );\n      });\n    }\n    return filteredMatches;\n  };\n\n  const classes = useStyles();\n\n  const loader = ( <Container className={classes.loaderContainer} align=\"center\">\n  <LinearProgress className={classes.loader}/>\n</Container>)\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs>\n          {isMatchesDataLoaded?<LeagueHeading\n            leagueName={matchesData.competition.name}\n            country={matchesData.competition.area.name}\n          />:loader}\n        </Grid>\n        <Grid container spacing={2} direction>\n          <Grid item xs>\n            <CalendarFilter\n              startDateValue={start}\n              endDateValue={end}\n              yearValue={year}\n            />\n          </Grid>\n          <Grid item xs sm={10}>\n            <Paper>\n              {isMatchesDataLoaded? <LeagueTable matches={filterMatches(matchesData)} />:''}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n}\n\n","import React from \"react\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Typography,\n  CardContent,\n  CardMedia,\n  Card,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport config from \"./config\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: 300,\n    height: 550,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    margin: \"auto\",\n    transition: \"0.3s\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n    },\n  },\n  media: {\n    height: 200,\n  },\n  fit: {\n    objectFit: \"scale-down\",\n  },\n  content: {\n    textAlign: \"left\",\n    padding: theme.spacing(3),\n  },\n  divider: {\n    margin: `${theme.spacing(3)}px 0`,\n  },\n  heading: {\n    fontWeight: \"bold\",\n  },\n  avatar: {\n    display: \"inline-block\",\n    border: \"2px solid white\",\n    \"&:not(:first-of-type)\": {\n      marginLeft: theme.spacing(),\n    },\n  },\n}));\n\nexport default function TeamCard({\n  name,\n  teamImage,\n  adress,\n  phone,\n  website,\n  email,\n  id,\n  lastUpdate,\n}) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <Container align=\"center\">\n        <Typography variant=\"overline\" color=\"textSecondary\">\n          {lastUpdate}\n        </Typography>\n      </Container>\n      <CardMedia className={classes.media} image={teamImage} />\n      <CardContent className={classes.content}>\n        <Typography\n          align=\"center\"\n          className={\"heading\"}\n          variant={\"h6\"}\n          gutterBottom\n        >\n          {name}\n        </Typography>\n        <Typography variant=\"subtitle2\" className={\"subheading\"}>\n          Адрес: {adress}\n        </Typography>\n        <Typography variant=\"subtitle2\" className={\"subheading\"}>\n          Телефон: {phone}\n        </Typography>\n        <Typography variant=\"subtitle2\" className={\"subheading\"}>\n          Сайт: {website ? website : \"отсутствует\"}\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          Почта: {email ? email : \"отсутствует\"}\n        </Typography>\n        <Divider className={classes.divider} light />\n        <Container align=\"center\">\n          <Button\n            component={Link}\n            to={`${config.ghPagesURL}teamcalendar/${id}`}\n            color=\"primary\"\n            align=\"center\"\n            variant=\"contained\"\n          >\n            Расписание\n          </Button>\n        </Container>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport config from \"./config\";\nimport { LinearProgress, Container, Grid } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\nimport TeamCard from \"./TeamCard\";\nimport ListFilter from \"./ListFilter\";\nimport queryString from \"query-string\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ListTeams() {\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [teamsData, setTeamsData] = useState();\n  const { search } = useLocation();\n  const { text } = queryString.parse(search);\n  const { year } = queryString.parse(search);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      padding: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    cust: {\n      background:\n        \"linear-gradient(63deg, rgba(40,103,41,1) 0%, rgba(15,88,32,1) 50%, rgba(70,195,130,1) 100%);\",\n    },\n    loaderContainer:{\n      position:'absolute',\n      top:'0',\n      left:'0',\n      padding:0,\n    },\n    loader:{\n      width: '100vw'\n    }\n  }));\n  const classes = useStyles();\n\n  const fetchTeams = () => {\n    fetch(`${config.teams}`, {\n      method: \"GET\",\n      headers: { \"X-Auth-Token\": config.apiKey },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setTeamsData(result.teams);\n          setIsDataLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  const filterData = (data) => {\n    let filteredData = data.slice();\n\n    if (year) {\n      filteredData = filteredData.filter(\n        (team) =>\n          new Date(Date.parse(team.lastUpdated)).getFullYear().toString() ===\n          year\n      );\n    }\n    if (text) {\n      filteredData = filteredData.filter((team) =>\n        team.name.toLowerCase().includes(text.toLowerCase())\n      );\n    }\n    return filteredData;\n  };\n\n  const createCardsArray = (data) => {\n    const cardsArray = [];\n    data.forEach((team) => {\n      cardsArray.push(\n        <Grid item key={team.id}>\n          <TeamCard\n          key={team.id}\n            name={team.name}\n            teamImage={team.crestUrl}\n            adress={team.address}\n            phone={team.phone}\n            website={team.website}\n            email={team.email}\n            id={team.id}\n            lastUpdate={team.lastUpdated}\n          />\n        </Grid>\n      );\n    });\n    return cardsArray;\n  };\n\n  useEffect(() => {\n    fetchTeams();\n  }, []);\n\n  const loader = ( <Container className={classes.loaderContainer} align=\"center\">\n  <LinearProgress className={classes.loader}/>\n</Container>)\n\n    return (\n      <Grid container>\n        <Grid item xs>\n          <NavBar activeElement=\"Список команд\" />\n          <ListFilter textValue={text} yearValue={year} />\n        </Grid>\n        <Grid className={classes.root} container spacing={2} xs sm={10}>\n          {(isDataLoaded)?createCardsArray(filterData(teamsData)):loader}\n        </Grid>\n      </Grid>\n    );\n}\n","import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport config from './config';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  colorWinner:{\n    color:'green'\n  },\n  colorLoser:{\n    color:'red'\n  }\n});\n\nexport default function TeamSquadList({id}) {\n  const classes = useStyles();\n  const [squad,setSquad] = useState();\n  const [isDataLoaded,setIsDataLoaded] = useState(false);\n\n  const fetchSquad = () => {\n    fetch(`${config.teamById(id)}`, {\n      method: \"GET\",\n      headers: { \"X-Auth-Token\": config.apiKey },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setSquad(result.squad);\n          setIsDataLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  useEffect(() => {\n    fetchSquad();\n  }, []);\n\n  const parseUtcDate = (utcDate) =>{\n    const parsedDate = new Date (Date.parse(utcDate));\n    return (`${parsedDate.getFullYear()}-${parsedDate.getMonth()}-${parsedDate.getDate()}`)\n  }\n\n  const generateCells = () =>{\n    return squad.map((player) => (\n        <TableRow key={player.id}>\n          <TableCell component=\"th\" scope=\"row\">\n            {player.name}\n          </TableCell>\n          <TableCell align=\"right\">{player.position}</TableCell>\n          <TableCell align=\"right\">{parseUtcDate(player.dateOfBirth) }</TableCell>\n          <TableCell align=\"right\">{player.countryOfBirth}</TableCell>\n          <TableCell align=\"right\">{player.nationality}</TableCell>\n          <TableCell align=\"right\">{player.shirtNumber}</TableCell>\n          <TableCell align=\"right\">{player.role}</TableCell>\n          </TableRow>\n      ))\n  }\n\n if(!isDataLoaded){\n   return <div>загруз</div>\n } else{\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell >Имя</TableCell>\n            <TableCell align=\"right\">Позиция</TableCell>\n            <TableCell align=\"right\">День рождения</TableCell>\n            <TableCell align=\"right\">Место рождения</TableCell>\n            <TableCell align=\"right\">Национальность</TableCell>\n            <TableCell align=\"right\">Номер</TableCell>\n            <TableCell align=\"right\">Роль</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {generateCells()}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, LinearProgress, Container } from \"@material-ui/core\";\nimport CalendarFilter from \"./CalendarFilter\";\nimport TeamSquadList from \"./TeamSquadList\";\nimport MatchesList from \"./MatchesList\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport config from \"./config\";\nimport queryString from \"query-string\";\n\nexport default function CalendarTeam() {\n  const { id } = useParams();\n  const [matchesData, setMatchesData] = useState();\n  const [isMatchesDataLoaded, setIsMatchesDataLoaded] = useState(false);\n  const { search } = useLocation();\n  const { start } = queryString.parse(search);\n  const { end } = queryString.parse(search);\n  const { year } = queryString.parse(search);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      padding: theme.spacing(2),\n    },\n    loaderContainer:{\n      position:'absolute',\n      top:'0',\n      left:'0',\n      padding:0,\n    },\n    loader:{\n      width: '100vw'\n    }\n  }));\n  const classes = useStyles();\n\n  const fetchMatchesByTeam = () => {\n    fetch(`${config.matchesByTeamId(id)}`, {\n      method: \"GET\",\n      headers: { \"X-Auth-Token\": config.apiKey },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setMatchesData(result.matches);\n          setIsMatchesDataLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  useEffect(() => {\n    fetchMatchesByTeam();\n  }, []);\n\n  const parseUtcDate = (utcDate) => {\n    const parsedDate = new Date(Date.parse(utcDate));\n    return `${parsedDate.getFullYear()}-${parsedDate.getMonth()}-${parsedDate.getDate()}`;\n  };\n\n  const filterMatches = () => {\n    let filteredMatches = matchesData.slice();\n    if (start) {\n      const normalizedStartDate = new Date(Date.parse(start));\n      filteredMatches = filteredMatches.filter((match) => {\n        const normalizedMatchDate = new Date(\n          Date.parse(parseUtcDate(match.utcDate))\n        );\n        return normalizedMatchDate >= normalizedStartDate;\n      });\n    }\n    if (end) {\n      const normalizedEndDate = new Date(Date.parse(end));\n      filteredMatches = filteredMatches.filter((match) => {\n        const normalizedMatchDate = new Date(\n          Date.parse(parseUtcDate(match.utcDate))\n        );\n        return normalizedMatchDate <= normalizedEndDate;\n      });\n    }\n    if (year) {\n      const normalizedYear = new Date(Date.parse(year));\n      filteredMatches = filteredMatches.filter((match) => {\n        const normalizedMatchDate = new Date(\n          Date.parse(parseUtcDate(match.utcDate))\n        );\n        return (\n          normalizedMatchDate.getFullYear() === normalizedYear.getFullYear()\n        );\n      });\n    }\n    return filteredMatches;\n  };\n\n  const loader = ( <Container className={classes.loaderContainer} align=\"center\">\n  <LinearProgress className={classes.loader}/>\n</Container>)\n\n    return (\n      <Grid className={classes.root} container spacing={2}>\n        <Grid item xs sm={2}>\n          <CalendarFilter />\n        </Grid>\n        <Grid\n          className={classes.root}\n          container\n          sm={10}\n          spacing={2}\n          direction=\"column\"\n        >\n          <Grid item xs>\n            {(isMatchesDataLoaded)?<MatchesList\n              className={classes.margin}\n              matches={filterMatches(matchesData)}\n            />:loader}\n          </Grid>\n          <Grid item xs>\n            <TeamSquadList id={id} />\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport ListLeagues from \"./ListLeagues\";\nimport CalendarLeague from './CalendarLeague'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport ListTeams from './ListTeams'\nimport CalendarTeam from \"./CalendarTeam\";\nimport config from \"./config\";\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Router>\n         <Header />\n        <Switch>\n          <Route path={`${config.ghPagesURL}leagues`}>\n            <ListLeagues />\n          </Route>\n          <Route path={`${config.ghPagesURL}teams`}>\n            <ListTeams/>\n          </Route>\n          <Route path={`${config.ghPagesURL}leaguecalendar/:id`}>\n            <CalendarLeague/>\n          </Route>\n          <Route path={`${config.ghPagesURL}teamcalendar/:id`}>\n            <CalendarTeam/>\n          </Route>\n          <Redirect to={`${config.ghPagesURL}leagues`}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}